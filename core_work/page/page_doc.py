import streamlit as st

def page_doc_part():
    st.markdown(
        """
        <h3>文档页面</h3>
        """,
        unsafe_allow_html=True
    )
    st.markdown("""
    ### 船舶碰撞仿真应用功能说明文档

    #### 1. 应用概述

    本应用旨在模拟两艘船舶在二维平面上的运动，并检测它们之间的碰撞。用户可以通过输入船舶的初始位置、速度、长度和宽度等参数，观察船舶的运动轨迹和碰撞情况。应用还提供了存档和加载功能，方便用户保存和恢复仿真状态。

    #### 2. 主要功能

    ##### 2.1 用户输入参数

    - **船舶1初始位置**：用户可以输入船舶1的初始X坐标和Y坐标。
    - **船舶1速度**：用户可以输入船舶1在X轴和Y轴方向上的速度。
    - **船舶1尺寸**：用户可以输入船舶1的长度和宽度。
    - **船舶2初始位置**：用户可以输入船舶2的初始X坐标和Y坐标。
    - **船舶2速度**：用户可以输入船舶2在X轴和Y轴方向上的速度。
    - **船舶2尺寸**：用户可以输入船舶2的长度和宽度。
    - **转向距离**：用户可以输入船舶在一定距离内转向的距离。
    - **转向方向**：用户可以选择船舶的转向方向，包括左转和右转。

    ##### 2.2 船舶运动模拟

    - **移动**：船舶根据输入的速度和时间步长进行移动。
    - **转向**：当两艘船舶之间的距离小于设定的转向距离时，船舶会根据设定的转向方向进行转向。

    ##### 2.3 碰撞检测

    - **分离轴定理**：应用使用分离轴定理检测两艘船舶之间的碰撞。如果检测到碰撞，应用会在图表中标记碰撞点，并在文本中显示“Collision detected!”。

    ##### 2.4 存档和加载

    - **存档**：用户可以点击“Save”按钮，将当前的船舶状态（包括位置、速度、长度、宽度、转向距离和转向方向）保存到 `ship_state.json` 文件中。
    - **加载**：用户可以点击“Load”按钮，从 `ship_state.json` 文件中加载之前保存的船舶状态，恢复仿真。

    ##### 2.5 逐步仿真

    - **Step**：用户可以点击“Step”按钮，逐步推进仿真，观察船舶的运动轨迹和碰撞情况。
    - **Clear**：用户可以点击“Clear”按钮，恢复到初始状态，重新开始仿真。

    #### 3. 使用说明

    ##### 3.1 输入参数

    1. 在侧边栏中输入船舶1和船舶2的初始位置、速度、长度和宽度。
    2. 输入转向距离和转向方向。

    ##### 3.2 仿真操作

    1. 点击“Step”按钮，逐步推进仿真，观察船舶的运动轨迹和碰撞情况。
    2. 点击“Clear”按钮，恢复到初始状态，重新开始仿真。

    ##### 3.3 存档和加载

    1. 点击“Save”按钮，将当前的船舶状态保存到 `ship_state.json` 文件中。
    2. 点击“Load”按钮，从 `ship_state.json` 文件中加载之前保存的船舶状态，恢复仿真。

    #### 4. 注意事项

    - 本应用仅作为示例，实际使用时请根据具体需求进行调整和优化。
    - 请确保输入参数的准确性，以获得准确的仿真结果。

    #### 5. 联系我们

    如有任何问题或建议，请联系：
    - 邮箱：lixuhui123@mail.nwpu.edu.cn
    - 电话：15926816074

    ### 总结

    本应用通过模拟两艘船舶的运动和碰撞检测，帮助用户了解船舶在不同条件下的行为。用户可以通过输入参数、逐步仿真、存档和加载等功能，灵活地进行仿真操作。希望本应用能够为船舶运动仿真提供有价值的参考和工具。


    
    """)